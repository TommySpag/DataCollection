{
	"info": {
		"_postman_id": "9f7c8d8f-215a-4234-a0bc-86673c486b80",
		"name": "API scenario testing",
		"description": "# üñáÔ∏è Get started here\n\nPostman's [scripting](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) feature allows you to build conditional workflows using a collection. You can branch and loop over a set of requests.\n\nThis template contains a sample conditional workflow for testing successful user creation across a data array.\n\nThe workflow is set to run in successive iterations with different values in each iteration. If the API returns a successful response in an iteration, the next iteration is triggered, and so on. You will get a report of successful user creations when all the iterations are successful. If a user creation fails, the loop is terminated, and you will get a report of the failed attempt.\n\n<img src=\"https://content.pstmn.io/d21cb133-1e04-41f6-9ef6-9aaf85df4e82/aW1hZ2UucG5n\" alt=\"Workflow%20depicting%20the%20collection%20execution\" width=\"638\" height=\"720\">\n\nThe [postman.setNextRequest()](https://learning.postman.com/docs/postman/scripts/branching-and-looping/) function enables you to change the order of requests in a collection while testing. This function allows you to conditionally skip specific requests, repeat requests, terminate the collection early, etc. You can use conditional workflows in various use cases, from [generating a Spotify playlist](https://blog.postman.com/generate-spotify-playlists-using-a-postman-collection/) to [checking your website for broken links](https://blog.postman.com/check-for-broken-links-on-your-website-using-a-postman-collection/).\n\n## üîñ **How to use this template**\n\n**Step 1:** Open the collection and click on the \"View more actions\" icon.\n\n**Step 2:** Click \"Run Collection\" to open the [collection runner](https://learning.postman.com/docs/running-collections/intro-to-collection-runs/).\n\n**Step 3:** Click on \"Run Conditional Workflow\" to run the collection.\n\n#### Modifying the data\n\nYou can find the data array in the collection variables section, which you can navigate to by clicking on the collection's name in the sidebar and then selecting the Variables tab.\n\nThe data array follows this structure:\n\n``` json\n[\n    {\n        \"username\": \"\",\n        \"name\": \"\",\n        \"role\": \"\"\n    },\n    ...\n]\n\n ```\n\n## üí°Related templates\n\n[Async operations](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=66c7f0e5-065a-4d08-9c7e-0825e9e29e24&sourceTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb)  \n[Data visualization](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=c9e72d75-ded7-4135-a721-5d59ddda6d59&sourceTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb)  \n[Integration testing](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=fe506090-ca91-4340-bea9-82d2c3d2bb9a&sourceTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb)  \n[Reusing requests and scripts](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=0cb2db53-2dee-430b-a0cf-21f1dbb50bb1&sourceTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb)  \n[Run collection with data file](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=6a8f6393-58ab-4458-944c-7fc8f08448da&sourceTemplateId=78475d97-9a36-4731-ab24-9adf6a94d0fb)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "32921590"
	},
	"item": [
		{
			"name": "Report successful product creation",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImV4YW1wbGVVc2VyIiwiaWF0IjoxNzI4ODU5Mjc2LCJleHAiOjE3Mjg4NjI4NzZ9.eGwdxGOoCsUe46D0-72rdArKIFhm68RPNDsJ-fokufc"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Mens Black Jacket\",\n  \"description\": \"A black leather jacket\",\n  \"quantity\": 50,\n  \"price\": 59.99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/api/v1/products",
				"description": "If all the users were created successfully, then this request reports the successful results.\n\nYou can also use the [Slack API](https://www.postman.com/slackhq/workspace/slack-api/collection/13509546-993e3b18-d277-4189-8ce5-af45df38e336), [Twilio API](https://postman.com/twilio/workspace/twilio-api/collection/12503610-194919ce-e80b-44da-8eec-45ea8e74cdfb?ctx=documentation), or the [MessageBird API](https://www.postman.com/messagebird-official/workspace/messagebird-official/collection/7989812-9fcde03c-9cfb-4293-95ea-81f53d244e75) to get notified in case of success or failure."
			},
			"response": []
		},
		{
			"name": "Report failed product creation",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Mens Black Jacket\",\n  \"description\": \"A black leather jacket\",\n  \"quantity\": 50,\n  \"price\": 59.99\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/api/v1/products",
				"description": "If there was any failure in creating a user, this request reports the failed attempt."
			},
			"response": []
		},
		{
			"name": "Report successful product change",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImV4YW1wbGVVc2VyIiwiaWF0IjoxNzI4ODU5Mjc2LCJleHAiOjE3Mjg4NjI4NzZ9.eGwdxGOoCsUe46D0-72rdArKIFhm68RPNDsJ-fokufc"
					}
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Mens random Jacket\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/api/v1/products/1"
			},
			"response": []
		},
		{
			"name": "Report failed product change",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Mens random Jacket\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/api/v1/products/1"
			},
			"response": []
		},
		{
			"name": "Report successful product deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImV4YW1wbGVVc2VyIiwiaWF0IjoxNzI4ODU5Mjc2LCJleHAiOjE3Mjg4NjI4NzZ9.eGwdxGOoCsUe46D0-72rdArKIFhm68RPNDsJ-fokufc"
					}
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"{{results}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/api/v1/products/2"
			},
			"response": []
		},
		{
			"name": "Report failed product deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"{{results}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "users",
			"value": "[{\"username\": \"flash\",\"name\": \"Barry Allen\",\"role\": \"Superhero\"},{\"username\": \"wonder_woman\",\"name\": \"Diana Prince\",\"role\":\"Superhero\"},{\"username\": \"batman\",\"name\": \"Bruce Wayne\",\"role\": \"Superhero\"}]"
		},
		{
			"key": "results",
			"value": "[]",
			"type": "string"
		},
		{
			"key": "successAPIUrl",
			"value": "https://postman-echo.com/post",
			"type": "string"
		},
		{
			"key": "failureAPIUrl",
			"value": "https://postman-echo.com/post",
			"type": "string"
		},
		{
			"key": "idx",
			"value": "0"
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "role",
			"value": ""
		}
	]
}